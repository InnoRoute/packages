<%+header%>
<!--
    TrustNode FPGA bitstream upload plugin ulbricht@innoroute.de 2018
    adapded from https://html5demos.com/dnd-upload/#view-source
    ulbricht@innoroute 2018
-->
<h2><a name="content">TrustNode bitstream upload</a></h2>
<style>
#holder { border: 10px dashed #ccc;   margin: 20px auto;}
#holder.hover { border: 10px dashed #047438; }
#holder img { display: block; margin: 10px auto; }
#holder p { margin: 10px; font-size: 14px; }
#holder2 p { margin: 10px; font-size: 14px; }
progress { width: 100%; color: #047438 }
progress:after { content: '%'; }
.fail { background: #c00; padding: 2px; color: #fff; }
.hidden { display: none !important;}
</style>
<article>
   <img id="holder" src="<%=media%>/tn3.png" alt="TrustNode" width="100%">
  <div id="holder2"> </div> 
  <p id="upload" class="hidden"><label>Drag & drop not supported, but you can still upload via this input field:<br><input type="file"></label></p>
  <p id="filereader">File API & FileReader API not supported</p>
  <p id="formdata">XHR2's FormData is not supported</p>
  <p id="progress">XHR2's upload progress isn't supported</p>
  <div id="progressbar" style="visibility: hidden;"> 
  <p>Upload progress: <progress id="uploadprogress" max="100" value="0">0</progress></p></div>
  <legend><p>Drag&Drop a *.bit or *.tar file over the TrustNode!</p>
       	<p>The file/tar-content will be saved as /boot/trustnode_top.bit and /usr/share/InnoRoute/tn_env.sh, <i>TNchangemod 8</i> will be launched, this can cause a reboot of the system.</p>
       	<p>The page will reloaded after reboot.</p> </legend>
</article>
<script>
var holder = document.getElementById('holder'),
    tests = {
      filereader: typeof FileReader != 'undefined',
      dnd: 'draggable' in document.createElement('span'),
      formdata: !!window.FormData,
      progress: "upload" in new XMLHttpRequest
    }, 
    support = {
      filereader: document.getElementById('filereader'),
      formdata: document.getElementById('formdata'),
      progress: document.getElementById('progress')
    },
    acceptedTypes = {
      'bit': true,
      'tar': true
    },
    progress = document.getElementById('uploadprogress'),
    fileupload = document.getElementById('upload');

"filereader formdata progress".split(' ').forEach(function (api) {
  if (tests[api] === false) {
    support[api].className = 'fail';
  } else {
    // FFS. I could have done el.hidden = true, but IE doesn't support
    // hidden, so I tried to create a polyfill that would extend the
    // Element.prototype, but then IE10 doesn't even give me access
    // to the Element object. Brilliant.
    support[api].className = 'hidden';
  }
});

function previewfile(file) {
  if (tests.filereader === true && acceptedTypes[file.type] === true) {
    console.log(file);
    holder2.innerHTML += '<p>Uploaded ' + file.name + ' ' + (file.size ? (file.size/1024|0) + 'K' : '');
  }  else {
    holder2.innerHTML += '<p>Filetype not supported ' + file.name;
    console.log(file);
  }
}
function getExtensionFromFilename(fileName) {
   return fileName.slice((fileName.lastIndexOf(".") - 1 >>> 0) + 2);
}
function readfiles(files) {
    debugger;
    var formData = tests.formdata ? new FormData() : null;
    
    if (tests.formdata) formData.append('input-name', files[0]);
    if (tests.formdata) formData.append('type', getExtensionFromFilename(files[0].name));
    if (tests.filereader === true && acceptedTypes[getExtensionFromFilename(files[0].name)] === true) {
    console.log(files[0]);
    progressbar.style.visibility = 'visible';
    holder2.innerHTML += '<p>Uploaded ' + files[0].name + ' ' + (files[0].size ? (files[0].size/1024|0) + 'K' : '')+'</p>';
    
        // now post a new XHR request
    if (tests.formdata) {
      var xhr = new XMLHttpRequest();
      xhr.open('POST', '<%=luci.dispatcher.build_url("admin", "trustnode", "TNuploading")%>');
      xhr.onload = function() {
        progress.value = progress.innerHTML = 100;
      };

      if (tests.progress) {
        xhr.upload.onprogress = function (event) {
          if (event.lengthComputable) {
            var complete = (event.loaded / event.total * 100 | 0);
            progress.value = progress.innerHTML = complete;
          }
        }
      }

      xhr.send(formData);
      setTimeout("location='<%=luci.dispatcher.build_url("admin", "trustnode", "TNupload")%>'", 60000);
      
    }
  }  else {
    holder2.innerHTML += '<p><b><font color="red">Filetype not supported ' + files[0].name+'</font></b></p>';
    console.log(files[0]);
    console.log(getExtensionFromFilename(files[0].name));
  }

}

if (tests.dnd) { 
  holder.ondragover = function () { this.className = 'hover'; return false; };
  holder.ondragend = function () { this.className = ''; return false; };
  holder.ondrop = function (e) {
    this.className = '';
    e.preventDefault();
    readfiles(e.dataTransfer.files);
  }
} else {
  fileupload.className = 'hidden';
  fileupload.querySelector('input').onchange = function () {
    readfiles(this.files);
  };
}

</script>


<%+footer%>

